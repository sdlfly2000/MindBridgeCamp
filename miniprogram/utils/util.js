"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Login = exports.webClient = exports.FormatTime = exports.FormatDate = exports.formatTime = void 0;
exports.formatTime = function (date) {
    var year = date.getFullYear();
    var month = date.getMonth() + 1;
    var day = date.getDate();
    var hour = date.getHours();
    var minute = date.getMinutes();
    var second = date.getSeconds();
    return ([year, month, day].map(formatNumber).join('-') +
        ' ' +
        [hour, minute, second].map(formatNumber).join(':'));
};
var formatNumber = function (n) {
    var s = n.toString();
    return s[1] ? s : '0' + s;
};
exports.FormatDate = function (date) {
    return [date.getFullYear(), date.getMonth() + 1, date.getDate()].map(formatNumber).join('-');
};
exports.FormatTime = function (date) {
    return [date.getHours(), date.getMinutes()].map(formatNumber).join(':');
};
exports.webClient = function (url, httpMethod, requestData) {
    return new Promise(function (resolve, error) {
        wx.request({
            url: url,
            method: httpMethod,
            data: requestData,
            success: function (res) {
                resolve(res);
            },
            fail: function (e) {
                error(e);
            }
        });
    });
};
exports.Login = function (app) {
    wx.login({
        success: function (res) {
            console.info("Login Code: " + res.code);
            wx.request({
                url: app.globalData.baseUrlAuth + "WeixinLogin/GetToken",
                data: {
                    LoginCode: res.code,
                    AppName: app.globalData.appName
                },
                header: {
                    'content-type': 'application/json'
                },
                method: 'POST',
                success: function (response) {
                    if (response.data != undefined) {
                        wx.setStorageSync('LoginToken', response.data);
                        console.info("Login Token: " + response.data);
                    }
                }
            });
        },
    });
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRpbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbInV0aWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQWEsUUFBQSxVQUFVLEdBQUcsVUFBQyxJQUFVO0lBQ25DLElBQU0sSUFBSSxHQUFHLElBQUksQ0FBQyxXQUFXLEVBQUUsQ0FBQTtJQUMvQixJQUFNLEtBQUssR0FBRyxJQUFJLENBQUMsUUFBUSxFQUFFLEdBQUcsQ0FBQyxDQUFBO0lBQ2pDLElBQU0sR0FBRyxHQUFHLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQTtJQUMxQixJQUFNLElBQUksR0FBRyxJQUFJLENBQUMsUUFBUSxFQUFFLENBQUE7SUFDNUIsSUFBTSxNQUFNLEdBQUcsSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFBO0lBQ2hDLElBQU0sTUFBTSxHQUFHLElBQUksQ0FBQyxVQUFVLEVBQUUsQ0FBQTtJQUVoQyxPQUFPLENBQ0wsQ0FBQyxJQUFJLEVBQUUsS0FBSyxFQUFFLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxZQUFZLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDO1FBQzlDLEdBQUc7UUFDSCxDQUFDLElBQUksRUFBRSxNQUFNLEVBQUUsTUFBTSxDQUFDLENBQUMsR0FBRyxDQUFDLFlBQVksQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FDbkQsQ0FBQTtBQUNILENBQUMsQ0FBQTtBQUVELElBQU0sWUFBWSxHQUFHLFVBQUMsQ0FBUztJQUM3QixJQUFNLENBQUMsR0FBRyxDQUFDLENBQUMsUUFBUSxFQUFFLENBQUE7SUFDdEIsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxHQUFHLENBQUMsQ0FBQTtBQUMzQixDQUFDLENBQUE7QUFFWSxRQUFBLFVBQVUsR0FBRyxVQUFTLElBQVU7SUFDM0MsT0FBTyxDQUFDLElBQUksQ0FBQyxXQUFXLEVBQUUsRUFBRSxJQUFJLENBQUMsUUFBUSxFQUFFLEdBQUcsQ0FBQyxFQUFFLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxZQUFZLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7QUFDL0YsQ0FBQyxDQUFBO0FBRVksUUFBQSxVQUFVLEdBQUcsVUFBUyxJQUFVO0lBQzNDLE9BQU8sQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFFLEVBQUUsSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDLENBQUMsR0FBRyxDQUFDLFlBQVksQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztBQUMxRSxDQUFDLENBQUE7QUFFWSxRQUFBLFNBQVMsR0FBRyxVQUFTLEdBQVcsRUFBRSxVQUFnQixFQUFFLFdBQWlCO0lBQ2hGLE9BQU8sSUFBSSxPQUFPLENBQ2hCLFVBQUMsT0FBTyxFQUFFLEtBQUs7UUFDYixFQUFFLENBQUMsT0FBTyxDQUFDO1lBQ1QsR0FBRyxFQUFFLEdBQUc7WUFDUixNQUFNLEVBQUUsVUFBVTtZQUNsQixJQUFJLEVBQUUsV0FBVztZQUNqQixPQUFPLEVBQUUsVUFBUyxHQUFHO2dCQUNuQixPQUFPLENBQUMsR0FBRyxDQUFDLENBQUM7WUFDZixDQUFDO1lBQ0QsSUFBSSxFQUFFLFVBQVMsQ0FBQztnQkFDZCxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDWCxDQUFDO1NBQ0YsQ0FBQyxDQUFDO0lBQ0wsQ0FBQyxDQUNGLENBQUM7QUFDSixDQUFDLENBQUE7QUFFWSxRQUFBLEtBQUssR0FBRyxVQUFTLEdBQWU7SUFDM0MsRUFBRSxDQUFDLEtBQUssQ0FBQztRQUNQLE9BQU8sRUFBRSxVQUFBLEdBQUc7WUFDVixPQUFPLENBQUMsSUFBSSxDQUFDLGNBQWMsR0FBRyxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUM7WUFDeEMsRUFBRSxDQUFDLE9BQU8sQ0FBQztnQkFDVCxHQUFHLEVBQUUsR0FBRyxDQUFDLFVBQVUsQ0FBQyxXQUFXLEdBQUcsc0JBQXNCO2dCQUN4RCxJQUFJLEVBQUM7b0JBQ0gsU0FBUyxFQUFFLEdBQUcsQ0FBQyxJQUFJO29CQUNuQixPQUFPLEVBQUUsR0FBRyxDQUFDLFVBQVUsQ0FBQyxPQUFPO2lCQUNoQztnQkFDRCxNQUFNLEVBQUU7b0JBQ04sY0FBYyxFQUFFLGtCQUFrQjtpQkFDbkM7Z0JBQ0QsTUFBTSxFQUFFLE1BQU07Z0JBQ2QsT0FBTyxFQUFFLFVBQVMsUUFBUTtvQkFDeEIsSUFBRyxRQUFRLENBQUMsSUFBSSxJQUFJLFNBQVMsRUFBQzt3QkFDNUIsRUFBRSxDQUFDLGNBQWMsQ0FBQyxZQUFZLEVBQUUsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFBO3dCQUM5QyxPQUFPLENBQUMsSUFBSSxDQUFDLGVBQWUsR0FBRyxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUM7cUJBQy9DO2dCQUNILENBQUM7YUFDRixDQUFDLENBQUE7UUFDSixDQUFDO0tBQ0YsQ0FBQyxDQUFBO0FBQ0osQ0FBQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IGZvcm1hdFRpbWUgPSAoZGF0ZTogRGF0ZSkgPT4ge1xuICBjb25zdCB5ZWFyID0gZGF0ZS5nZXRGdWxsWWVhcigpXG4gIGNvbnN0IG1vbnRoID0gZGF0ZS5nZXRNb250aCgpICsgMVxuICBjb25zdCBkYXkgPSBkYXRlLmdldERhdGUoKVxuICBjb25zdCBob3VyID0gZGF0ZS5nZXRIb3VycygpXG4gIGNvbnN0IG1pbnV0ZSA9IGRhdGUuZ2V0TWludXRlcygpXG4gIGNvbnN0IHNlY29uZCA9IGRhdGUuZ2V0U2Vjb25kcygpXG5cbiAgcmV0dXJuIChcbiAgICBbeWVhciwgbW9udGgsIGRheV0ubWFwKGZvcm1hdE51bWJlcikuam9pbignLScpICtcbiAgICAnICcgK1xuICAgIFtob3VyLCBtaW51dGUsIHNlY29uZF0ubWFwKGZvcm1hdE51bWJlcikuam9pbignOicpXG4gIClcbn1cblxuY29uc3QgZm9ybWF0TnVtYmVyID0gKG46IG51bWJlcikgPT4ge1xuICBjb25zdCBzID0gbi50b1N0cmluZygpXG4gIHJldHVybiBzWzFdID8gcyA6ICcwJyArIHNcbn1cblxuZXhwb3J0IGNvbnN0IEZvcm1hdERhdGUgPSBmdW5jdGlvbihkYXRlOiBEYXRlKXtcbiAgcmV0dXJuIFtkYXRlLmdldEZ1bGxZZWFyKCksIGRhdGUuZ2V0TW9udGgoKSArIDEsIGRhdGUuZ2V0RGF0ZSgpXS5tYXAoZm9ybWF0TnVtYmVyKS5qb2luKCctJyk7XG59XG5cbmV4cG9ydCBjb25zdCBGb3JtYXRUaW1lID0gZnVuY3Rpb24oZGF0ZTogRGF0ZSl7XG4gIHJldHVybiBbZGF0ZS5nZXRIb3VycygpLCBkYXRlLmdldE1pbnV0ZXMoKV0ubWFwKGZvcm1hdE51bWJlcikuam9pbignOicpO1xufVxuXG5leHBvcnQgY29uc3Qgd2ViQ2xpZW50ID0gZnVuY3Rpb24odXJsOiBzdHJpbmcsIGh0dHBNZXRob2Q/OiBhbnksIHJlcXVlc3REYXRhPzogYW55KXtcbiAgcmV0dXJuIG5ldyBQcm9taXNlKFxuICAgIChyZXNvbHZlLCBlcnJvcikgPT4ge1xuICAgICAgd3gucmVxdWVzdCh7XG4gICAgICAgIHVybDogdXJsLFxuICAgICAgICBtZXRob2Q6IGh0dHBNZXRob2QsXG4gICAgICAgIGRhdGE6IHJlcXVlc3REYXRhLFxuICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbihyZXMpe1xuICAgICAgICAgIHJlc29sdmUocmVzKTtcbiAgICAgICAgfSxcbiAgICAgICAgZmFpbDogZnVuY3Rpb24oZSl7XG4gICAgICAgICAgZXJyb3IoZSk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cbiAgKTtcbn1cblxuZXhwb3J0IGNvbnN0IExvZ2luID0gZnVuY3Rpb24oYXBwOiBJQXBwT3B0aW9uKXtcbiAgd3gubG9naW4oe1xuICAgIHN1Y2Nlc3M6IHJlcyA9PiB7XG4gICAgICBjb25zb2xlLmluZm8oXCJMb2dpbiBDb2RlOiBcIiArIHJlcy5jb2RlKTsgICAgICBcbiAgICAgIHd4LnJlcXVlc3Qoe1xuICAgICAgICB1cmw6IGFwcC5nbG9iYWxEYXRhLmJhc2VVcmxBdXRoICsgXCJXZWl4aW5Mb2dpbi9HZXRUb2tlblwiLFxuICAgICAgICBkYXRhOntcbiAgICAgICAgICBMb2dpbkNvZGU6IHJlcy5jb2RlLFxuICAgICAgICAgIEFwcE5hbWU6IGFwcC5nbG9iYWxEYXRhLmFwcE5hbWVcbiAgICAgICAgfSxcbiAgICAgICAgaGVhZGVyOiB7XG4gICAgICAgICAgJ2NvbnRlbnQtdHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJ1xuICAgICAgICB9LFxuICAgICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgICAgc3VjY2VzczogZnVuY3Rpb24ocmVzcG9uc2UpeyAgICAgICAgICBcbiAgICAgICAgICBpZihyZXNwb25zZS5kYXRhICE9IHVuZGVmaW5lZCl7XG4gICAgICAgICAgICB3eC5zZXRTdG9yYWdlU3luYygnTG9naW5Ub2tlbicsIHJlc3BvbnNlLmRhdGEpXG4gICAgICAgICAgICBjb25zb2xlLmluZm8oXCJMb2dpbiBUb2tlbjogXCIgKyByZXNwb25zZS5kYXRhKTsgXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9KVxuICAgIH0sXG4gIH0pIFxufSJdfQ==